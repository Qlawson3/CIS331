
package Project1;
import java.util.*;


public class UniversityApp {

    // initialize Student array to make accessible class wide
    public static Student[] allStudents = new Student[500];
    public static int studentCount = 0;
    // count number of courses enrolled in
    public static int enrollCount = 0;
    
    
    public static Scanner in = new Scanner(System.in);
    
//    // initialize Course array to make accessible class wide
//    public static Course[] courses = new Course[500];
//    // count number of courses created
//    public static int courseCount = 0;
    
   
    

    
    public static void main(String[] args) {
       
        // retrieve course array
        Course[] allCourses = Course.getCourses();
        
        // retrieve semester array
        Semester[] allSemesters = Semester.getSemester();
        int semCount = Semester.getSemCount();
        
        // CREATE MENU
        int menuChoice = -1;
        
        while (menuChoice != 6)
        {
            System.out.println("\nUNIVERSITY MAIN MENU");
            System.out.println("\n\tPlease Select A Menu Choice");
            System.out.println("\t-------------------------");
            System.out.println("\t1: Create");
            System.out.println("\t2: Edit");
            System.out.println("\t3: Enroll a Student");
            System.out.println("\t4: Assign Course to Faculty");
            System.out.println("\t5: Print Reports");
            System.out.println("\t6: Exit Application");
            System.out.println("\t-------------------------");
            System.out.println();
            System.out.println("Choice (1-6): ");
            menuChoice = in.nextInt();
            
            // consumer errant new line character
            in.nextLine();
            
            System.out.println();
            
            switch (menuChoice)
            {
                case 1: 
                {

                    int optionChoice = -1;
                    while (optionChoice != 5) 
                    {
                        System.out.println("\t\tWhat are you creating? ");
                        System.out.println("\t\t-------------------------");
                        System.out.println("\t\t1: Student");
                        System.out.println("\t\t2: Faculty");
                        System.out.println("\t\t3: Course");
                        System.out.println("\t\t4: Semester");
                        System.out.println("\t\t5: Exit");
                        System.out.println("\t\t-------------------------");
                        System.out.println();
                        System.out.println("Choice (1-5): ");
                        optionChoice = in.nextInt();

                        switch (optionChoice)
                        {
                            case 1: 
                                createStudent();
                                break;
                            case 2:
                                // createFaculty();
                                break;
                            case 3:
                                createCourse(allSemesters, semCount, allCourses);
                                break;
                            case 4:
                                semCount = createSemester(allSemesters, semCount);
                                break;
                        }

                    } 
                    break;

                }
                case 2: 
                {
                   int optionChoice = -1;
                        while (optionChoice != 5) 
                        {
                            System.out.println("\t\tWhat are you editing? ");
                            System.out.println("\t\t-------------------------");
                            System.out.println("\t\t1: Student");
                            System.out.println("\t\t2: Faculty");
                            System.out.println("\t\t3: Course");
                            System.out.println("\t\t4: Semester");
                            System.out.println("\t\t5: Exit");
                            System.out.println("\t\t-------------------------");
                            System.out.println();
                            System.out.println("Choice (1-5): ");
                            optionChoice = in.nextInt();

                            switch (optionChoice)
                            {
                                case 1: 
                                    // editStudent();
                                    break;
                                case 2:
                                    // editFaculty();
                                    break;
                                case 3:
                                    // editCourse();
                                    break;
                                case 4:
                                    // editSemester();
                                    break;
                            }

                        } 
                        break;
                
                }
                case 3:
                    enrollStudent(Course.getCourses());
                    break;
                case 4:
                    // assignCourse();
                    break;
                case 5: 
                {
                    int optionChoice = -1;
                        while (optionChoice != 5) 
                        {
                            System.out.println("\t\tWhat kind of report? ");
                            System.out.println("\t\t-------------------------");
                            System.out.println("\t\t1: Courses Taught per Semester");
                            System.out.println("\t\t2: Courses Taught by Specific Faculty");
                            System.out.println("\t\t3: Student Schedule by Semester");
                            System.out.println("\t\t4: Course Roster per Semester");
                            System.out.println("\t\t5: Exit");
                            System.out.println("\t\t-------------------------");
                            System.out.println();
                            System.out.println("Choice (1-5): ");
                            optionChoice = in.nextInt();

                            switch (optionChoice)
                            {
                                case 1: 
                                    // coursePerSemester();
                                    break;
                                case 2:
                                    // coursePerFaculty();
                                    break;
                                case 3:
                                    studentSchedule(allSemesters);
                                    break;
                                case 4:
                                    // courseRoster();
                                    break;
                        }

                    }
                        break;
                }
                   
        
        }
        
        
    }
    
}
    public static void createStudent() {
        
        Student student = new Student();
        in.nextLine();
        // initialize course array
        student.courses = new Course[8];
        
        System.out.println("\nEnter First and Last Name: ");
        student.fullName = in.nextLine();
        
        System.out.println("Enter ID #: ");
        student.studentID = in.nextInt();
        in.nextLine();
       
        System.out.println("Enter SSN (no dashes): ");
        int ssn = in.nextInt();
        in.nextLine();
        student.setSSN(ssn);
        
        System.out.println("Enter Home Address: ");
        String homeAddress = in.nextLine();
        student.setAddress(homeAddress);
        
        System.out.println("Enter Email Address: ");
        student.email = in.nextLine();
        
        System.out.println("Enter GPA: ");
        double gpa = in.nextDouble();
        in.nextLine();
        student.setGPA(gpa);
        
        System.out.println("-------------------------------------");
        System.out.println("EMERGENCY CONTACT INFORMATION");
        
        System.out.println("Enter First and Last Name: ");
        String emergencyName = in.nextLine();
        student.setEmergencyName(emergencyName);
        
        System.out.println("Enter Email Address: ");
        String emergencyEmail = in.nextLine();
        student.setEmergencyEmail(emergencyEmail);
        
        System.out.println("Enter Phone Number: ");
        String emergencyPhone = in.nextLine();
        student.setEmergencyPhone(emergencyPhone);
        
        // add student to array of students
        allStudents[studentCount++] = student;
        
    }
    
    
    public static void createCourse(Semester[] allSemesters, int semCount, Course[] allCourses)
    {
        Course course = new Course();
        in.nextLine();
        
        System.out.println("\nEnter Course Prefix : ");
        course.coursePrefix = in.nextLine();
        
        System.out.println("Enter Course #: ");
        course.courseNum = in.nextInt();
        in.nextLine();
       
        System.out.println("Enter the Days Taught: ");
        course.daysTaught = in.nextLine();
        
        System.out.println("Enter Start Time: ");
        course.startTime = in.nextLine();
        
        System.out.println("Enter End Time: ");
        course.endTime = in.nextLine();
        
        System.out.println("Enter Credit Amount: ");
        course.credits = in.nextInt();
        in.nextLine();
        
        System.out.println("Enter Semester: ");
        String period = in.next();
        int year = in.nextInt();
        in.nextLine();
        
        // assign course to semester
        Semester semester = new Semester();
        semester.period = period;
        semester.year = year;
        
        // assigns this specific course a semester
        course.semester = semester;
        
        System.out.println(semester.period + semester.year);
        
        // assign course specific semester
        if (course.semester != null) 
        {
            course.assignSemester(semester);
        }
        
        // add course to course array
        course.addCourse(course);
        
        
        for (int i = 0; i < allSemesters.length && allSemesters[i] != null; i++) {
            System.out.println(i + ": " + allSemesters[i].period + allSemesters[i].year);
        }
        
       
//        // add course to course array
//        courses[courseCount] = course;
//        System.out.println(courseCount);
        
        
        
    }
    
    public static int createSemester(Semester[] allSemesters, int semCount) {
        
        Semester semester = new Semester();
        in.nextLine();
        
        System.out.println("\nPlease Enter Semester Period (Fall, Spring, etc): ");
        semester.period = in.nextLine();
        
        System.out.println("Please Enter the Year (YYYY): ");
        semester.year = in.nextInt();
        in.nextLine();
       
            // add semester to array
            semester.addSemester(semester);
//            allSemesters[semCount++] = semester;
//            Semester.setSemCount(semCount);
        
            for (int i = 0; i < allSemesters.length && allSemesters[i] != null; i++) {
            System.out.println(i + ": " + allSemesters[i].period + allSemesters[i].year);
              
            
        }
            
            return semCount;
    }
    
    
    public static void enrollStudent(Course[] allCourses) {
        
        // display all students
        System.out.println("Please select a Student (#): ");
        
        for (int i = 0; i < allStudents.length; i++)
        {
            if (allStudents[i] != null) {
                System.out.println(i + ": " + allStudents[i].fullName);
            }
        }
        
        // select student
        int selection = in.nextInt();
        in.nextLine();
        // identify selected Student
        Student selectStudent = allStudents[selection];
        
        // list all courses
        System.out.println("Please select desired Course (#): ");
        int number = 0;
        
        for (int i = 0; i < allCourses.length; i++)
        {
            Course course = allCourses[i];
            if (course != null) 
            {
                System.out.println(number + ": " + course.coursePrefix + course.courseNum);
                number++;
            }
        }
        
        int selectCourse = in.nextInt();
        in.nextLine();
        
        if (selectCourse >= 0 && selectCourse < allCourses.length)
        {
            Course chosenCourse = allCourses[selectCourse];

            System.out.println("Please select a Semester (#): ");
            
            for (int i = 0; i < allCourses.length; i++)
            {
                if (allCourses[i] != null) 
                {
               // if the object at i position in allCourses array matches the chosenCourse object, print its semester
                    if (allCourses[i].coursePrefix.equalsIgnoreCase(chosenCourse.coursePrefix) &&
                        allCourses[i].courseNum == (chosenCourse.courseNum))
                    {   
                        if (allCourses[i].semester != null) {
                        System.out.println(i + ": " + allCourses[i].semester.period + " " + 
                            allCourses[i].semester.year);
                        }
                    }
                }
            }
            
            int semChoice = in.nextInt();
            in.nextLine();

            // update chosen course to reflect correct semester
            chosenCourse = allCourses[semChoice];

            // update enrollment count for select student
            enrollCount = Enrollment.enrollStudent(selectStudent, chosenCourse, enrollCount);
        }
        else 
            System.out.println("Invalid course selection");
        // initialize Course variable to hold selction
        
        
        // this section is repetitive but good code for EDITING function 
//        chosenCourse.courseNum = courses[selectCourse].courseNum;
//        chosenCourse.coursePrefix = courses[selectCourse].coursePrefix;
//        chosenCourse.courseID = courses[selectCourse].courseID;
//        chosenCourse.credits = courses[selectCourse].credits;
//        chosenCourse.daysTaught = courses[selectCourse].daysTaught;
//        chosenCourse.startTime = courses[selectCourse].startTime;
//        chosenCourse.endTime = courses[selectCourse].endTime;
//        chosenCourse.semester = courses[selectCourse].semester;

        
    }
    
    public static void studentSchedule(Semester[] allSemesters) {
        
        // display all students
        if (allStudents != null)
        {
            for (int i = 0; i < studentCount; i++) 
            {
                System.out.println(i + ": " + allStudents[i].studentID);
            }
        }
// use string match between name of student, course, and semester

        // get user's choice
        System.out.println("Please select a Student (#): ");
        int selection = in.nextInt();
        in.nextLine();
        
        // identify selected Student
        Student selectedStudent = allStudents[selection];
        
        // identify desired semester
        if (allSemesters != null)
        {
            for (int i = 0; i < allSemesters.length; i++)
            {
                if (allSemesters[i] != null) {
                System.out.println(i + ": " + allSemesters[i].period + " " + allSemesters[i].year);
            }
            }
        }
        
        System.out.println("What Semester (#)?");
        int semSelect = in.nextInt();
        in.nextLine();
        // identify semester selection
        Semester selectedSem = allSemesters[semSelect];
        
        // call enrollment class member method
        System.out.println(selectedStudent.fullName + "'s " + selectedSem.period + " " + selectedSem.year + " CLASS SCHEDULE");
        System.out.println("--------------------------------------------");
        
        Enrollment.listStudentSchedule(selectedStudent, selectedSem);
        
        
}
    
    public static void editStudent() {
        
        
    }
    
    
}




